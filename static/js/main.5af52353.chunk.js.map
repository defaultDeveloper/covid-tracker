{"version":3,"sources":["Component/Charts/charts.module.css","Component/CountryPicker/countrypicker.module.css","Component/AppBar/appbar.module.css","Component/Table/table.module.css","Component/Cards/cards.module.css","Component/Cards/cards.jsx","api/index.js","Component/Charts/charts.jsx","Component/CountryPicker/countrypicker.jsx","Component/News/news.jsx","Component/Navigation/navigation.jsx","Component/AppBar/appbar.jsx","Component/Dialog/dialog.jsx","Component/Table/table.jsx","home.js","routes.js","App.js","serviceWorker.js","index.js","App.module.css","Component/News/news.module.css","Component/Navigation/navigation.module.css"],"names":["module","exports","Cards","data","confirmed","deaths","recovered","country","lastUpdate","React","useState","open","setOpen","setData","handleClickOpen","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","onClick","CardActionArea","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","active","AlertDialog","handleClose","url","config","trackerUrl","fetchData","a","finalUrl","axios","get","console","error","message","fetchDailyData","modifiedData","map","total","date","reportDate","log","fetchCountries","countries","name","fetchNews","newsUrl","fetchStateData","Charts","dailyData","setDailyData","theme","useTheme","useEffect","fetchApi","barChart","labels","datasets","label","backgroundColor","fontColor","palette","type","options","legend","display","title","scales","yAxes","xAxes","gridLines","barPercentage","plugins","datalabels","anchor","align","lineChart","length","borderColor","fill","text","Countrypicker","handleCountryChange","setCountries","defaultCountry","setDefaultCountry","FormControl","formControl","NativeSelect","onChange","e","target","index","key","News","news","setNews","article","window","redirectToNews","CardMedia","media","image","urlToImage","LabelBottomNavigation","location","hash","substr","setValue","history","useHistory","phantom","footer","BottomNavigation","event","newValue","showLabels","root","BottomNavigationAction","push","icon","useStyles","makeStyles","grid","padding","margin","flexGrow","ButtonAppBar","toggleDarkTheme","classes","AppBar","position","Toolbar","Date","toDateString","split","slice","join","IconButton","edge","menuButton","aria-label","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","Math","trunc","DialogActions","Button","tableCell","paddingRight","paddingLeft","visuallyHidden","border","clip","height","overflow","top","width","descendingComparator","b","orderBy","headCells","numeric","disablePadding","EnhancedTableHead","props","order","onRequestSort","TableHead","TableRow","headCell","TableCell","sortDirection","TableSortLabel","direction","property","SimpleTable","stateData","setStateData","setOrder","setOrderBy","TableContainer","Paper","Table","size","TableBody","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","provinceState","style","Homepage","setCountry","fetchedData","init","home","Routes","exact","path","App","check","setCheck","setTheme","muiTheme","createMuiTheme","ThemeProvider","CssBaseline","newPaletteType","content","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5af52353.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"charts_container__3DmoD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"countrypicker_formControl__2TtZ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"appbar_root__3iVLE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"table_container__2U_y1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"cards_container__38iSX\",\"card\":\"cards_card__18AMa\",\"infected\":\"cards_infected__375bw\",\"active\":\"cards_active__2X44a\",\"recovered\":\"cards_recovered__z0e6q\",\"deaths\":\"cards_deaths__1sgBN\"};","import React from 'react'\r\nimport { Card, CardContent, Typography, Grid, CardActionArea } from '@material-ui/core'\r\nimport styles from './cards.module.css'\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames'\r\nimport { AlertDialog } from '../index'\r\n\r\nconst Cards = ({ data: { confirmed, deaths, recovered, lastUpdate }, country }) => {\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [data, setData] = React.useState();\r\n\r\n    const handleClickOpen = () => {\r\n        if (country === 'India') {\r\n            setOpen(true);\r\n            setData({ confirmed, deaths, recovered })\r\n        }\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    if (!confirmed) {\r\n        return 'loading....'\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={0} justify=\"center\">\r\n                <Grid item component={Card} xs={5} md={2} className={cx(styles.card, styles.infected)}>\r\n                    <Card onClick={() => handleClickOpen()}>\r\n                        <CardActionArea>\r\n                            <CardContent>\r\n                                <Typography color=\"textPrimary\" gutterBottom>Confirmed</Typography>\r\n                                <Typography variant=\"h5\">\r\n                                    <CountUp\r\n                                        start={0}\r\n                                        end={confirmed.value}\r\n                                        duration={2.5}\r\n                                        separator=\",\"\r\n                                    />\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item component={Card} xs={5} md={2} className={cx(styles.card, styles.active)}>\r\n                    <Card onClick={() => handleClickOpen()}>\r\n                        <CardActionArea>\r\n                            <CardContent>\r\n                                <Typography color=\"textPrimary\" gutterBottom>Active</Typography>\r\n                                <Typography variant=\"h5\"><CountUp\r\n                                    start={0}\r\n                                    end={confirmed.value - recovered.value}\r\n                                    duration={2.5}\r\n                                    separator=\",\"\r\n                                /></Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item component={Card} xs={5} md={2} className={cx(styles.card, styles.recovered)}>\r\n                    <Card onClick={() => handleClickOpen()}>\r\n                        <CardActionArea>\r\n                            <CardContent>\r\n                                <Typography color=\"textPrimary\" gutterBottom>Recovered</Typography>\r\n                                <Typography variant=\"h5\"><CountUp\r\n                                    start={0}\r\n                                    end={recovered.value}\r\n                                    duration={2.5}\r\n                                    separator=\",\"\r\n                                /></Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item component={Card} xs={5} md={2} className={cx(styles.card, styles.deaths)}>\r\n                    <Card onClick={() => handleClickOpen()}>\r\n                        <CardActionArea>\r\n                            <CardContent>\r\n                                <Typography color=\"textPrimary\" gutterBottom>Deaths</Typography>\r\n                                <Typography variant=\"h5\"><CountUp\r\n                                    start={0}\r\n                                    end={deaths.value}\r\n                                    duration={2.5}\r\n                                    separator=\",\"\r\n                                /></Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n            {country === 'India' && open ? <AlertDialog open={open} handleClose={handleClose} data={data} /> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards","import axios from \"axios\";\r\nimport config from \"../config/config.json\";\r\n/**\r\n * Get either global data or based on the selected country.\r\n */\r\nconst url = config.trackerUrl;\r\nexport const fetchData = async (country) => {\r\n  try {\r\n    let finalUrl = \"\";\r\n    if (country === \"global\") {\r\n      finalUrl = `${url}`;\r\n    } else {\r\n      finalUrl = `${url}/countries/${country}`;\r\n    }\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(finalUrl);\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    console.error(error.message);\r\n  }\r\n};\r\n\r\n/**\r\n * Get daily data for Global - used for the line chart\r\n */\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    const modifiedData = data.map((data) => {\r\n      return {\r\n        confirmed: data.confirmed.total,\r\n        deaths: data.deaths.total,\r\n        date: data.reportDate,\r\n      };\r\n    });\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\n/**\r\n * Get the list of countries\r\n */\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\n/**\r\n * Get the headlines on COVID\r\n */\r\nexport const fetchNews = async () => {\r\n  try {\r\n    //Was gettting cors error with the original  url hence added the 1st part\r\n    const { data } = await axios.get(config.newsUrl);\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\n/**\r\n * Gets the daily details of Indian states\r\n */\r\nexport const fetchStateData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/countries/India/confirmed`);\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n","import React,{useEffect,useState} from 'react'\r\nimport {fetchDailyData} from '../../api'\r\nimport {Line,Bar} from 'react-chartjs-2'\r\nimport styles from './charts.module.css'\r\nimport 'chartjs-plugin-datalabels'\r\nimport { useTheme } from '@material-ui/core/styles'\r\n\r\nconst Charts = ({data:{confirmed,recovered,deaths},country})=>{\r\n    const [dailyData,setDailyData] = useState([])\r\n    const theme = useTheme()\r\n    useEffect(()=>{\r\n        const fetchApi = async()=>{\r\n        setDailyData(await fetchDailyData())\r\n        }\r\n        fetchApi()\r\n    },[])\r\n    \r\nconst barChart=(\r\n    confirmed ?\r\n    (<Bar\r\n        data = {{\r\n            labels:['Infected','Active','Recovered','Deaths'],\r\n            datasets:[{\r\n                label:'People',\r\n                backgroundColor:[\r\n                    'rgba(0, 0, 255, 0.5)',\r\n                    'rgba(255, 196, 0, 0.842)',\r\n                    'rgba(0,255,0, 0.5)',\r\n                    'rgba(255, 0, 0, 0.5)'],\r\n                data:[confirmed.value,confirmed.value-recovered.value,recovered.value,deaths.value]\r\n            }],\r\n            fontColor:theme.palette.type==='light'?'black':'white',\r\n        }}\r\n        options={{\r\n            legend:{display:false},\r\n            title:{display:true},\r\n            scales: {\r\n                yAxes: [{\r\n                  display: false\r\n                }],\r\n                xAxes: [{\r\n                    display:false,\r\n                    gridLines: {\r\n                        display:false\r\n                    },\r\n                    barPercentage: 0.5\r\n                }]\r\n            },\r\n            //plugins for the values as bar headers\r\n            plugins: {\r\n                datalabels: {\r\n                   display: true,\r\n                   color: theme.palette.type==='light'?'black':'white',\r\n                   anchor:'end',\r\n                   align:'top'\r\n                }\r\n             }\r\n        }}\r\n    />):null\r\n)\r\nconst lineChart =(\r\n    dailyData.length\r\n     ?(<Line\r\n        data={{\r\n            labels:dailyData.map(({date})=>date),\r\n            datasets:[{\r\n                data : dailyData.map(({confirmed})=>confirmed),\r\n                label:'Infected',\r\n                borderColor:'#3333ff',\r\n                fill:true\r\n            },{\r\n                data : dailyData.map(({recovered})=>recovered),\r\n                label:'Recovered',\r\n                borderColor:'rgba(0,255,0, 0.5)',\r\n                fill:true\r\n            },{\r\n                data : dailyData.map(({deaths})=>deaths),\r\n                label:'Deaths',\r\n                borderColor:'red',\r\n                backgroundColor:'rgba(255,0,0,0.5)',\r\n                fill:true\r\n         }]\r\n        }}\r\n        options={{\r\n            legend:{display:false},\r\n            title:{display:true, text:`${country}`,fontColor:theme.palette.type==='light'?'black':'white'},\r\n            scales: {\r\n                yAxes: [{\r\n                  display: false\r\n                }],\r\n                xAxes: [{\r\n                    display: false,\r\n                    gridLines: {\r\n                        display:false\r\n                    }\r\n                }]\r\n            },\r\n            //plugins for the values as bar headers\r\n            plugins: {\r\n                datalabels: {\r\n                   display: false,\r\n                }\r\n             }\r\n        }}\r\n        />):null)\r\n    \r\n    //Only show line chart if country selected is global\r\n    return (\r\n        <div className={styles.container}>\r\n            {country!=='global' ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Charts\r\n","import React,{useEffect,useState} from 'react'\r\nimport styles from './countrypicker.module.css'\r\nimport {fetchCountries} from '../../api'\r\nimport {NativeSelect,FormControl} from '@material-ui/core'\r\n\r\nconst Countrypicker = ({handleCountryChange})=>{\r\n    const [countries,setCountries]=useState([])\r\n    const [defaultCountry,setDefaultCountry]=useState('India')\r\n    \r\n    useEffect(()=>{\r\n        (async function(){\r\n            setCountries(await fetchCountries())\r\n        }())\r\n    },[])\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect value={defaultCountry} onChange={(e)=>{handleCountryChange(e.target.value)\r\n            setDefaultCountry(e.target.value)}}> \r\n            {/* used the setState method here to persist the new selection  */}\r\n                <option value=\"global\">Global</option>\r\n                {countries.map((country,index)=><option key={index} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default Countrypicker\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Card, CardContent, Typography, Grid, CardMedia,CardActionArea } from '@material-ui/core'\r\nimport styles from './news.module.css'\r\nimport { fetchNews } from '../../api'\r\n\r\nconst News = () => {\r\n    const [news, setNews] = useState([])\r\n\r\n    useEffect(() => {\r\n        (async function () {\r\n            setNews(await fetchNews())\r\n        }())\r\n    }, [])\r\n\r\n    const redirectToNews = (url) => {\r\n        window.open(url,\"_blank\")\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            < Grid container spacing={0} justify=\"center\">\r\n                {news.map((article, index) => {\r\n                    return (\r\n                        <Grid item key={index} component={Card} xs={12} md={3} className={styles.card} >\r\n                            <Card onClick={() => redirectToNews(article.url)}>\r\n                                <CardActionArea>\r\n                                    <CardMedia className={styles.media} image={article.urlToImage} />\r\n                                    <CardContent>\r\n                                        <Typography variant=\"subtitle1\" gutterBottom>{article.title}</Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>)\r\n                }\r\n                )}\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News","import React from 'react';\r\nimport styles from './navigation.module.css';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function LabelBottomNavigation() {\r\n    const [value, setValue] = React.useState(!window.location.hash.substr(2)?'count':'news');\r\n    let history = useHistory()\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n\r\n    //phantom and footer div for a floating style navbar.\r\n    //history.push is used with browserHistory or hashHistory and is navigted to that route.\r\n    return (\r\n        <div>\r\n            <div className={styles.phantom} />\r\n            <div className={styles.footer}>\r\n                <BottomNavigation value={value} onChange={handleChange} showLabels className={styles.root}>\r\n                    <BottomNavigationAction label=\"Count\" value=\"count\" onClick={() => history.push('/')} icon={<LanguageIcon />} />\r\n                    <BottomNavigationAction label=\"News\" value=\"news\" onClick={() => history.push('/news')} icon={<InfoIcon />} />\r\n                </BottomNavigation>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport styles from './appbar.module.css'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Brightness2Icon from '@material-ui/icons/Brightness2';\r\nimport Brightness5Icon from '@material-ui/icons/Brightness5';\r\nimport { useTheme } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grid: {\r\n        padding:0,\r\n        margin:0,\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n\r\n}));\r\n\r\nexport default function ButtonAppBar({ toggleDarkTheme }) {\r\n    const classes = useStyles();\r\n    const theme = useTheme()\r\n\r\n    return (\r\n        <div className={styles.root}>\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <Toolbar>\r\n                    < Grid container spacing={0} justify=\"center\">\r\n                        <Grid item xs={5} md={9}>\r\n                            <Typography variant=\"h6\" align=\"left\" className={classes.title}>\r\n                                COVID-19\r\n                    </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={7} md={9}>\r\n                            <Typography variant=\"h6\" align=\"left\" className={classes.title}>{new Date().toDateString().split(' ').slice(0, 3).join(' ')}</Typography>\r\n                        </Grid>\r\n                    </ Grid>\r\n                    <IconButton edge=\"end\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={() => toggleDarkTheme()}>\r\n                        {theme.palette.type === 'light' ? <Brightness2Icon /> : <Brightness5Icon />}\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport default function AlertDialog({ open, handleClose, data: { confirmed, recovered, deaths } }) {\r\n  console.log(confirmed)\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"India Stats\"}</DialogTitle>\r\n        <DialogContent>\r\n          {open ? (<DialogContentText id=\"alert-dialog-description\">\r\n            <Typography>Recovery% is {Math.trunc(recovered.value / confirmed.value * 100)}%.</Typography>\r\n            <Typography>Death% is {Math.trunc(deaths.value / confirmed.value * 100)}%.</Typography>\r\n          </DialogContentText>) : <DialogContentText id=\"alert-dialog-description\">\r\n              No Stats Available.\r\n          </DialogContentText>}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport styles from './table.module.css'\r\nimport { fetchStateData } from '../../api'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\n\r\n//Added padding t accomodate the table in  mobile views\r\nconst useStyles = makeStyles({\r\n    tableCell: {\r\n        paddingRight: 4,\r\n        paddingLeft: 5\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n      },\r\n})\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n    { id: \"state\", numeric: false, disablePadding: true, label: 'State' },\r\n    { id: \"confirmed\", numeric: true, disablePadding: false, label: 'C' },\r\n    { id: \"active\", numeric: true, disablePadding: false, label: 'A' },\r\n    { id: \"recovered\", numeric: true, disablePadding: false, label: 'R' },\r\n    { id: \"deaths\", numeric: true, disablePadding: false, label: 'D' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { classes, order, orderBy, onRequestSort } = props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.numeric ? 'right' : 'left'}\r\n                        padding={headCell.disablePadding ? 'none' : 'default'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                        className={classes.tableCell}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <span className={classes.visuallyHidden}>\r\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                </span>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n};\r\n\r\n\r\nexport default function SimpleTable() {\r\n    const classes = useStyles()\r\n    const [stateData, setStateData] = React.useState([])\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('confirmed');\r\n\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        (async function () {\r\n            setStateData(await fetchStateData())\r\n        }())\r\n    }, [])\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid item xs={12}>\r\n                <TableContainer component={Paper}>\r\n                    <Table aria-label=\"simple table\" size=\"small\">\r\n                        <EnhancedTableHead\r\n                            classes={classes}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onRequestSort={handleRequestSort}\r\n                        />\r\n                        <TableBody>\r\n                            {stableSort(stateData, getComparator(order, orderBy)).map((data) => {\r\n                                return(\r\n                                <TableRow key={data.provinceState}>\r\n                                    <TableCell align=\"LEFT\" className={classes.tableCell}>\r\n                                        {data.provinceState}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\" style={{ color: \"#1875ff\" }} className={classes.tableCell}>{data.confirmed}</TableCell>\r\n                                    <TableCell align=\"right\" style={{ color: \"#d3a201\" }} className={classes.tableCell}>{data.active}</TableCell>\r\n                                    <TableCell align=\"right\" style={{ color: \"#00c400\" }} className={classes.tableCell}>{data.recovered}</TableCell>\r\n                                    <TableCell align=\"right\" style={{ color: \"#bd0000\" }} className={classes.tableCell}>{data.deaths}</TableCell>\r\n                                </TableRow>\r\n                            )})}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Cards, Countrypicker, Charts,SimpleTable } from './Component'\r\nimport styles from './App.module.css'\r\nimport { fetchData } from './api'\r\n\r\n\r\nconst Homepage = () => {\r\n    const [data, setData] = useState({})\r\n    const [country, setCountry] = useState('India')\r\n\r\n    useEffect(() => {\r\n        const init = async () => {\r\n            const fetchedData = await fetchData(country)\r\n            setData(fetchedData)\r\n            setCountry(country)\r\n        }\r\n        init()\r\n    }, [country])\r\n\r\n    const handleCountryChange = async (country) => {\r\n        console.log(country)\r\n        const fetchedData = await fetchData(country)\r\n        setData(fetchedData)\r\n        setCountry(country)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.home}>\r\n            <Countrypicker handleCountryChange={handleCountryChange} />\r\n            <Cards data={data} country={country}/>\r\n            <Charts data={data} country={country} />\r\n            {country==='India'?<SimpleTable/> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Homepage\r\n","import React from \"react\"\r\nimport { Route } from \"react-router-dom\"\r\nimport { News} from \"./Component\"\r\nimport Homepage from './home'\r\n\r\nconst Routes = () => {\r\n    return <div>\r\n        <Route exact path={'/'}>\r\n            <Homepage />\r\n        </Route>\r\n        <Route path={'/news'}>\r\n            <News />\r\n        </Route>\r\n    </div>\r\n}\r\n\r\nexport default Routes","import React, { useState } from 'react'\r\nimport styles from './App.module.css'\r\nimport { LabelBottomNavigation,ButtonAppBar } from './Component'\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Routes from \"./routes\"\r\nimport { HashRouter as Router } from \"react-router-dom\"\r\n\r\nconst App = () => {\r\n\r\n  const [check, setCheck] = useState(false)\r\n  const [theme, setTheme] = useState({\r\n    palette: {\r\n      type: \"light\"\r\n    }\r\n  })\r\n\r\n  const toggleDarkTheme = () => {\r\n    let newPaletteType = theme.palette.type === \"light\" ? \"dark\" : \"light\"\r\n    setTheme({\r\n      palette: {\r\n        type: newPaletteType\r\n      }\r\n    })\r\n    setCheck(check === true ? false : true)\r\n  }\r\n\r\n  const muiTheme = createMuiTheme(theme)\r\n\r\n  return (\r\n    <ThemeProvider theme={muiTheme}>\r\n      <CssBaseline />\r\n      <ButtonAppBar toggleDarkTheme={toggleDarkTheme}/>\r\n      <div className={styles.container}>\r\n        <Router>\r\n          <div className={styles.content}>\r\n            <Routes />\r\n          </div>\r\n            <LabelBottomNavigation/>\r\n        </Router>\r\n      </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'fontsource-roboto'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1FKO5\",\"image\":\"App_image__NxzKs\",\"content\":\"App_content__2OZpU\",\"home\":\"App_home__3uB_l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"news_container__1kTAZ\",\"card\":\"news_card__2-euk\",\"media\":\"news_media__Ymr8l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"navigation_root__2uXpa\",\"footer\":\"navigation_footer__14NYP\",\"phantom\":\"navigation_phantom__32HX3\"};"],"sourceRoot":""}