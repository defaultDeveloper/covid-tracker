{"version":3,"sources":["Component/Charts/charts.module.css","Component/CountryPicker/countrypicker.module.css","Component/Table/table.module.css","Component/Cards/cards.module.css","Component/Cards/cards.jsx","api/index.js","Component/Charts/charts.jsx","Component/CountryPicker/countrypicker.jsx","Component/News/news.jsx","Component/Navigation/navigation.jsx","Component/AppBar/appbar.jsx","Component/Dialog/dialog.jsx","Component/Table/table.js","home.js","routes.js","App.js","serviceWorker.js","index.js","App.module.css","Component/News/news.module.css","Component/Navigation/navigation.module.css","Component/AppBar/appbar.module.css"],"names":["module","exports","Cards","data","confirmed","deaths","recovered","country","lastUpdate","React","useState","open","setOpen","setData","handleClickOpen","className","styles","container","Grid","spacing","justify","item","xs","md","Typography","variant","align","gutterBottom","Date","toDateString","component","Card","cx","card","infected","onClick","CardActionArea","CardContent","color","start","end","value","duration","separator","active","AlertDialog","handleClose","url","fetchData","a","finalUrl","axios","get","console","error","message","fetchDailyData","modifiedData","map","total","date","reportDate","log","fetchCountries","countries","name","fetchNews","fetchStateData","Charts","dailyData","setDailyData","theme","useTheme","useEffect","fetchApi","barChart","labels","datasets","label","backgroundColor","fontColor","palette","type","options","legend","display","title","text","scales","yAxes","xAxes","gridLines","barPercentage","plugins","datalabels","anchor","lineChart","length","borderColor","fill","Countrypicker","handleCountryChange","setCountries","defaultCountry","setDefaultCountry","FormControl","formControl","NativeSelect","onChange","e","target","index","key","News","news","setNews","article","window","redirectToNews","CardMedia","media","image","urlToImage","LabelBottomNavigation","location","hash","substr","setValue","history","useHistory","phantom","footer","BottomNavigation","event","newValue","root","BottomNavigationAction","push","icon","useStyles","makeStyles","app","flexGrow","ButtonAppBar","toggleDarkTheme","classes","AppBar","position","Toolbar","IconButton","edge","menuButton","aria-label","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","Math","trunc","DialogActions","Button","tableCell","paddingRight","paddingLeft","SimpleTable","stateData","setStateData","TableContainer","Paper","Table","size","TableHead","TableRow","TableCell","TableBody","provinceState","scope","style","Homepage","setCountry","fetchedData","init","home","Routes","exact","path","App","check","setCheck","setTheme","muiTheme","createMuiTheme","ThemeProvider","CssBaseline","newPaletteType","content","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.8645b01d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"charts_container__1PQp2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"countrypicker_formControl__7uCU0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"table_container__2VR8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"cards_container__2PVPY\",\"card\":\"cards_card__1Dva2\",\"infected\":\"cards_infected__1NSUE\",\"active\":\"cards_active__259--\",\"recovered\":\"cards_recovered__2lDwE\",\"deaths\":\"cards_deaths__19LlB\"};","import React from 'react'\nimport { Card, CardContent, Typography, Grid, CardActionArea } from '@material-ui/core'\nimport styles from './cards.module.css'\nimport CountUp from 'react-countup'\nimport cx from 'classnames'\nimport { AlertDialog } from '../index'\n\nconst Cards = ({ data: { confirmed, deaths, recovered, lastUpdate }, country }) => {\n\n    const [open, setOpen] = React.useState(false);\n    const [data, setData] = React.useState();\n\n    const handleClickOpen = () => {\n        if (country === 'India') {\n            setOpen(true);\n            setData({ confirmed, deaths, recovered })\n        }\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    if (!confirmed) {\n        return 'loading....'\n    }\n\n    return (\n        <div className={styles.container}>\n            < Grid container spacing={0} justify=\"center\">\n                <Grid item xs={12} md={9}>\n                    <Typography variant=\"body1\" align=\"center\" gutterBottom>{new Date().toDateString()}</Typography>\n                </Grid>\n            </ Grid>\n            <Grid container spacing={0} justify=\"center\">\n                <Grid item component={Card} xs={5} md={2} className={cx(styles.card, styles.infected)}>\n                    <Card onClick={() => handleClickOpen()}>\n                        <CardActionArea>\n                            <CardContent>\n                                <Typography color=\"textPrimary\" gutterBottom>Infected</Typography>\n                                <Typography variant=\"h5\">\n                                    <CountUp\n                                        start={0}\n                                        end={confirmed.value}\n                                        duration={2.5}\n                                        separator=\",\"\n                                    />\n                                </Typography>\n                            </CardContent>\n                        </CardActionArea>\n                    </Card>\n                </Grid>\n                <Grid item component={Card} xs={5} md={2} className={cx(styles.card, styles.active)}>\n                    <Card onClick={() => handleClickOpen()}>\n                        <CardActionArea>\n                            <CardContent>\n                                <Typography color=\"textPrimary\" gutterBottom>Active</Typography>\n                                <Typography variant=\"h5\"><CountUp\n                                    start={0}\n                                    end={confirmed.value - recovered.value}\n                                    duration={2.5}\n                                    separator=\",\"\n                                /></Typography>\n                            </CardContent>\n                        </CardActionArea>\n                    </Card>\n                </Grid>\n                <Grid item component={Card} xs={5} md={2} className={cx(styles.card, styles.recovered)}>\n                    <Card onClick={() => handleClickOpen()}>\n                        <CardActionArea>\n                            <CardContent>\n                                <Typography color=\"textPrimary\" gutterBottom>Recovered</Typography>\n                                <Typography variant=\"h5\"><CountUp\n                                    start={0}\n                                    end={recovered.value}\n                                    duration={2.5}\n                                    separator=\",\"\n                                /></Typography>\n                            </CardContent>\n                        </CardActionArea>\n                    </Card>\n                </Grid>\n                <Grid item component={Card} xs={5} md={2} className={cx(styles.card, styles.deaths)}>\n                    <Card onClick={() => handleClickOpen()}>\n                        <CardActionArea>\n                            <CardContent>\n                                <Typography color=\"textPrimary\" gutterBottom>Deaths</Typography>\n                                <Typography variant=\"h5\"><CountUp\n                                    start={0}\n                                    end={deaths.value}\n                                    duration={2.5}\n                                    separator=\",\"\n                                /></Typography>\n                            </CardContent>\n                        </CardActionArea>\n                    </Card>\n                </Grid>\n            </Grid>\n            {country === 'India' && open ? <AlertDialog open={open} handleClose={handleClose} data={data} /> : null}\n        </div>\n    )\n}\n\nexport default Cards","import axios from 'axios'\n\nconst url = 'https://covid19.mathdro.id/api'\nexport const fetchData = async (country)=>{\n try {\n     let finalUrl=\"\"\n     if(country==='global'){\n         finalUrl=`${url}`\n    }else{\n         finalUrl=`${url}/countries/${country}`\n     }\n    const {data:{confirmed,recovered,deaths,lastUpdate}} = await axios.get(finalUrl)\n    return {confirmed,recovered,deaths,lastUpdate}\n } catch (error) {\n     console.error(error.message)\n }\n}\n\nexport const fetchDailyData = async ()=>{\n    try{\n        const {data} = await axios.get(`${url}/daily`)\n        const modifiedData = data.map(data=>{\n            return {\n                confirmed: data.confirmed.total,\n                deaths:data.deaths.total,\n                date :data.reportDate\n            }\n        })\n        return modifiedData\n    }\n    catch(error){\n    console.log(error.message)\n    }\n}\n\nexport const fetchCountries = async ()=>{\n    try{\n        const {data:{countries}} = await axios.get(`${url}/countries`)\n        return countries.map(country=> country.name)\n    }\n    catch(error){\n    console.log(error.message)\n    }\n}\n\nexport const fetchNews = async ()=>{\n    try{\n        const {data} = await axios.get(`https://cors-anywhere.herokuapp.com/https://covid-news-server.herokuapp.com/news`)\n        return data\n    }\n    catch(error){\n    console.log(error.message)\n    }\n}\n\nexport const fetchStateData = async ()=>{\n    try{\n        const {data} = await axios.get(`${url}/countries/India/confirmed`)\n        return data\n    }\n    catch(error){\n    console.log(error.message)\n    }\n}","import React,{useEffect,useState} from 'react'\nimport {fetchDailyData} from '../../api'\nimport {Line,Bar} from 'react-chartjs-2'\nimport styles from './charts.module.css'\nimport 'chartjs-plugin-datalabels'\nimport { useTheme } from '@material-ui/core/styles'\n\nconst Charts = ({data:{confirmed,recovered,deaths},country})=>{\n    const [dailyData,setDailyData] = useState([])\n    const theme = useTheme()\n    useEffect(()=>{\n        const fetchApi = async()=>{\n        setDailyData(await fetchDailyData())\n        }\n        fetchApi()\n    },[])\n    \nconst barChart=(\n    confirmed ?\n    (<Bar\n        data = {{\n            labels:['Infected','Active','Recovered','Deaths'],\n            datasets:[{\n                label:'People',\n                backgroundColor:[\n                    'rgba(0, 0, 255, 0.5)',\n                    'rgba(255, 196, 0, 0.842)',\n                    'rgba(0,255,0, 0.5)',\n                    'rgba(255, 0, 0, 0.5)'],\n                data:[confirmed.value,confirmed.value-recovered.value,recovered.value,deaths.value]\n            }],\n            fontColor:theme.palette.type==='light'?'black':'white',\n        }}\n        options={{\n            legend:{display:false},\n            title:{display:true, text:`${country}`,fontColor:theme.palette.type==='light'?'black':'white'},\n            scales: {\n                yAxes: [{\n                  display: false\n                }],\n                xAxes: [{\n                    gridLines: {\n                        display:false\n                    },\n                    barPercentage: 0.5\n                }]\n            },\n            //plugins for the values as bar headers\n            plugins: {\n                datalabels: {\n                   display: true,\n                   color: theme.palette.type==='light'?'black':'white',\n                   anchor:'end',\n                   align:'top'\n                }\n             }\n        }}\n    />):null\n)\nconst lineChart =(\n    dailyData.length\n     ?(<Line\n        data={{\n            labels:dailyData.map(({date})=>date),\n            datasets:[{\n                data : dailyData.map(({confirmed})=>confirmed),\n                label:'Infected',\n                borderColor:'#3333ff',\n                fill:true\n            },{\n                data : dailyData.map(({recovered})=>recovered),\n                label:'Recovered',\n                borderColor:'rgba(0,255,0, 0.5)',\n                fill:true\n            },{\n                data : dailyData.map(({deaths})=>deaths),\n                label:'Deaths',\n                borderColor:'red',\n                backgroundColor:'rgba(255,0,0,0.5)',\n                fill:true\n         }]\n        }}\n        options={{\n            legend:{display:false},\n            title:{display:true, text:`${country}`,fontColor:theme.palette.type==='light'?'black':'white'},\n            scales: {\n                yAxes: [{\n                  display: false\n                }],\n                xAxes: [{\n                    display: false,\n                    gridLines: {\n                        display:false\n                    }\n                }]\n            },\n            //plugins for the values as bar headers\n            plugins: {\n                datalabels: {\n                   display: false,\n                }\n             }\n        }}\n        />):null)\n    \n    //Only show line chart if country selected is global\n    return (\n        <div className={styles.container}>\n            {country!=='global' ? barChart : lineChart}\n        </div>\n    )\n}\n\nexport default Charts\n","import React,{useEffect,useState} from 'react'\nimport styles from './countrypicker.module.css'\nimport {fetchCountries} from '../../api'\nimport {NativeSelect,FormControl} from '@material-ui/core'\n\nconst Countrypicker = ({handleCountryChange})=>{\n    const [countries,setCountries]=useState([])\n    const [defaultCountry,setDefaultCountry]=useState('India')\n    \n    useEffect(()=>{\n        (async function(){\n            setCountries(await fetchCountries())\n        }())\n    },[])\n\n    return (\n        <FormControl styles={styles.formControl}>\n            <NativeSelect value={defaultCountry} onChange={(e)=>{handleCountryChange(e.target.value)\n            setDefaultCountry(e.target.value)}}> \n            {/* used the setState method here to persist the new selection  */}\n                <option value=\"global\">Global</option>\n                {countries.map((country,index)=><option key={index} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default Countrypicker\n","import React, { useState, useEffect } from 'react'\nimport { Card, CardContent, Typography, Grid, CardMedia,CardActionArea } from '@material-ui/core'\nimport styles from './news.module.css'\nimport { fetchNews } from '../../api'\n\nconst News = () => {\n    const [news, setNews] = useState([])\n\n    useEffect(() => {\n        (async function () {\n            setNews(await fetchNews())\n        }())\n    }, [])\n\n    const redirectToNews = (url) => {\n        window.open(url,\"_blank\")\n    }\n\n    return (\n        <div className={styles.container}>\n            < Grid container spacing={0} justify=\"center\">\n                <Grid item xs={12} md={9}>\n                    <Typography variant=\"h4\" align=\"center\" gutterBottom>Headlines</Typography>\n                </Grid>\n                {news.map((article, index) => {\n                    return (\n                        <Grid item key={index} component={Card} xs={12} md={3} className={styles.card} >\n                            <Card onClick={() => redirectToNews(article.url)}>\n                                <CardActionArea>\n                                    <CardMedia className={styles.media} image={article.urlToImage} />\n                                    <CardContent>\n                                        <Typography variant=\"subtitle1\" gutterBottom>{article.title}</Typography>\n                                    </CardContent>\n                                </CardActionArea>\n                            </Card>\n                        </Grid>)\n                }\n                )}\n            </Grid>\n        </div>\n    )\n}\n\nexport default News","import React from 'react';\nimport styles from './navigation.module.css';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { useHistory } from 'react-router-dom'\n\nexport default function LabelBottomNavigation() {\n    const [value, setValue] = React.useState(!window.location.hash.substr(2)?'count':'news');\n    let history = useHistory()\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n\n    //phantom and footer div for a floating style navbar.\n    //history.push is used with browserHistory or hashHistory and is navigted to that route.\n    return (\n        <div>\n            <div className={styles.phantom} />\n            <div className={styles.footer}>\n                <BottomNavigation value={value} onChange={handleChange} className={styles.root}>\n                    <BottomNavigationAction label=\"Count\" value=\"count\" onClick={() => history.push('/')} icon={<LanguageIcon />} />\n                    <BottomNavigationAction label=\"News\" value=\"news\" onClick={() => history.push('/news')} icon={<InfoIcon />} />\n                </BottomNavigation>\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport styles from './appbar.module.css'\nimport IconButton from '@material-ui/core/IconButton';\nimport Brightness2Icon from '@material-ui/icons/Brightness2';\nimport Brightness5Icon from '@material-ui/icons/Brightness5';\nimport { useTheme } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    app: {\n        backgroundColor: \"black\",\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function ButtonAppBar({ toggleDarkTheme }) {\n    const classes = useStyles();\n    const theme = useTheme()\n\n    return (\n        <div className={styles.root}>\n            <AppBar position=\"static\" className={styles.app}>\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        COVID-19\n                    </Typography>\n                    <IconButton edge=\"end\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={() => toggleDarkTheme()}>\n                        {theme.palette.type === 'light' ? <Brightness2Icon /> : <Brightness5Icon />}\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Typography } from '@material-ui/core';\n\nexport default function AlertDialog({ open, handleClose, data: { confirmed, recovered, deaths } }) {\n  console.log(confirmed)\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"India Stats\"}</DialogTitle>\n        <DialogContent>\n          {open ? (<DialogContentText id=\"alert-dialog-description\">\n            <Typography>Recovery% is {Math.trunc(recovered.value / confirmed.value * 100)}%.</Typography>\n            <Typography>Death% is {Math.trunc(deaths.value / confirmed.value * 100)}%.</Typography>\n          </DialogContentText>) : <DialogContentText id=\"alert-dialog-description\">\n              No Stats Available.\n          </DialogContentText>}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport styles from './table.module.css'\nimport { fetchStateData } from '../../api'\nimport Grid from '@material-ui/core/Grid'\nimport { makeStyles } from '@material-ui/core/styles'\nconst useStyles = makeStyles({\n    tableCell: {\n        paddingRight: 4,\n        paddingLeft: 5\n    }\n})\n\nexport default function SimpleTable() {\n    const classes =  useStyles()\n    const [stateData, setStateData] = React.useState([])\n    React.useEffect(() => {\n        (async function () {\n            setStateData(await fetchStateData())\n        }())\n    }, [])\n\n    return (\n        <div className={styles.container}>\n            <Grid item xs={12}>\n                <TableContainer component={Paper}>\n                    <Table aria-label=\"simple table\" size=\"small\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>State</TableCell>\n                                <TableCell align=\"right\" className={classes.tableCell}>C</TableCell>\n                                <TableCell align=\"right\" className={classes.tableCell}>A</TableCell>\n                                <TableCell align=\"right\" className={classes.tableCell}>R</TableCell>\n                                <TableCell align=\"right\" className={classes.tableCell}>D</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {stateData.map((data) => (\n                                <TableRow key={data.provinceState}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {data.provinceState}\n                                    </TableCell>\n                                    <TableCell align=\"right\" style={{ color: \"#1875ff\" }} className={classes.tableCell}>{data.confirmed}</TableCell>\n                                    <TableCell align=\"right\" style={{ color: \"#d3a201\" }} className={classes.tableCell}>{data.active}</TableCell>\n                                    <TableCell align=\"right\" style={{ color: \"#00c400\" }} className={classes.tableCell}>{data.recovered}</TableCell>\n                                    <TableCell align=\"right\" style={{ color: \"#bd0000\" }} className={classes.tableCell}>{data.deaths}</TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Grid>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from 'react'\nimport { Cards, Countrypicker, Charts,SimpleTable } from './Component'\nimport styles from './App.module.css'\nimport { fetchData } from './api'\n\n\nconst Homepage = () => {\n    const [data, setData] = useState({})\n    const [country, setCountry] = useState('India')\n\n    useEffect(() => {\n        const init = async () => {\n            const fetchedData = await fetchData(country)\n            setData(fetchedData)\n            setCountry(country)\n        }\n        init()\n    }, [country])\n\n    const handleCountryChange = async (country) => {\n        console.log(country)\n        const fetchedData = await fetchData(country)\n        setData(fetchedData)\n        setCountry(country)\n    }\n\n    return (\n        <div className={styles.home}>\n            <Cards data={data} country={country}/>\n            <Countrypicker handleCountryChange={handleCountryChange} />\n            <Charts data={data} country={country} />\n            {country==='India'?<SimpleTable/> : null}\n        </div>\n    )\n}\n\nexport default Homepage\n","import React from \"react\"\nimport { Route } from \"react-router-dom\"\nimport { News} from \"./Component\"\nimport Homepage from './home'\n\nconst Routes = () => {\n    return <div>\n        <Route exact path={'/'}>\n            <Homepage />\n        </Route>\n        <Route path={'/news'}>\n            <News />\n        </Route>\n    </div>\n}\n\nexport default Routes","import React, { useState } from 'react'\nimport styles from './App.module.css'\nimport { LabelBottomNavigation,ButtonAppBar } from './Component'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Routes from \"./routes\"\nimport { HashRouter as Router } from \"react-router-dom\"\n\nconst App = () => {\n\n  const [check, setCheck] = useState(false)\n  const [theme, setTheme] = useState({\n    palette: {\n      type: \"light\"\n    }\n  })\n\n  const toggleDarkTheme = () => {\n    let newPaletteType = theme.palette.type === \"light\" ? \"dark\" : \"light\"\n    setTheme({\n      palette: {\n        type: newPaletteType\n      }\n    })\n    setCheck(check === true ? false : true)\n  }\n\n  const muiTheme = createMuiTheme(theme)\n\n  return (\n    <ThemeProvider theme={muiTheme}>\n      <CssBaseline />\n      <ButtonAppBar toggleDarkTheme={toggleDarkTheme}/>\n      <div className={styles.container}>\n        <Router>\n          <div className={styles.content}>\n            <Routes />\n          </div>\n            <LabelBottomNavigation/>\n        </Router>\n      </div>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'fontsource-roboto'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\",\"content\":\"App_content__3La4L\",\"home\":\"App_home__2G-fr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"news_container__3UPWy\",\"card\":\"news_card__bG0P6\",\"media\":\"news_media__1Snmg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"navigation_root__Bt1om\",\"footer\":\"navigation_footer__38Etz\",\"phantom\":\"navigation_phantom__pwn06\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"appbar_root__1AICe\"};"],"sourceRoot":""}